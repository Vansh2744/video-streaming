// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String             @id @default(cuid())
  email       String             @unique
  username    String             @unique
  password    String
  likedVideos LikedVideos[]
  watchLater  WatchLaterVideos[]
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

model Video {
  id          String             @id @default(cuid())
  title       String
  description String?
  url         String
  thumbnail   String?
  views       Int                @default(0)
  likes       Int                @default(0)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  likedBy     LikedVideos[]
  savedBy     WatchLaterVideos[]
}

model LikedVideos {
  id      String @id @default(cuid())
  userId  String
  videoId String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([userId, videoId])
}

model WatchLaterVideos {
  id      String @id @default(cuid())
  userId  String
  videoId String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([userId, videoId])
}
